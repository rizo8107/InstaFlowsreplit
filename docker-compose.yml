version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: instaflow_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-instaflow}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - instaflow_network

  # Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: instaflow_app
    restart: unless-stopped
    ports:
      - "${PORT:-5000}:5000"
    environment:
      # Database
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-instaflow}
      
      # Session
      SESSION_SECRET: ${SESSION_SECRET:-change_this_in_production}
      
      # Instagram OAuth
      INSTAGRAM_APP_ID: ${INSTAGRAM_APP_ID}
      INSTAGRAM_APP_SECRET: ${INSTAGRAM_APP_SECRET}
      FACEBOOK_APP_ID: ${FACEBOOK_APP_ID}
      FACEBOOK_APP_SECRET: ${FACEBOOK_APP_SECRET}
      
      # OAuth Base URL (auto-detected if not set)
      OAUTH_BASE_URL: ${OAUTH_BASE_URL:-http://localhost:5000}
      
      # Environment
      NODE_ENV: ${NODE_ENV:-production}
      
      # Migration control (set to 'true' to force migrations on startup)
      FORCE_MIGRATIONS: ${FORCE_MIGRATIONS:-false}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - instaflow_network
    volumes:
      - ./logs:/app/logs

  # Optional: Database Backup Service
  backup:
    image: prodrigestivill/postgres-backup-local
    container_name: instaflow_backup
    restart: unless-stopped
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_DB: ${POSTGRES_DB:-instaflow}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      SCHEDULE: "@daily"
      BACKUP_KEEP_DAYS: 7
      BACKUP_KEEP_WEEKS: 4
      BACKUP_KEEP_MONTHS: 6
    volumes:
      - ./backups:/backups
    depends_on:
      - postgres
    networks:
      - instaflow_network

networks:
  instaflow_network:
    driver: bridge

volumes:
  postgres_data:
